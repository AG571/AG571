name: Daily heartbeat

on:
  workflow_dispatch:
  schedule:
    - cron: '15 07 * * *'  # 07:15 UTC daily (08:15 London when on BST)

permissions:
  contents: write

jobs:
  hb:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests pyyaml

      - name: Build AI news summary and update README
        shell: bash
        run: |
          python - <<'PY'
          import requests, re, datetime, pathlib

          README_PATH = pathlib.Path("README.md")
          START = "<!--START_HEARTBEAT-->"
          END   = "<!--END_HEARTBEAT-->"
          ts = datetime.datetime.utcnow().strftime("%Y-%m-%d %H:%M UTC")

          # Fetch a few AI headlines (no auth needed)
          def fetch_news():
              try:
                  r = requests.get(
                      "https://hn.algolia.com/api/v1/search",
                      params={
                          "query": "AI OR 'artificial intelligence'",
                          "tags": "story",
                          "hitsPerPage": 5,
                          "numericFilters": "points>50",
                      },
                      timeout=15,
                  )
                  r.raise_for_status()
                  hits = r.json().get("hits", [])[:3]
                  items = []
                  for h in hits:
                      title = h.get("title") or "(untitled)"
                      url = h.get("url") or f"https://news.ycombinator.com/item?id={h.get('objectID')}"
                      items.append(f"- [{title}]({url})")
                  return "\n".join(items) if items else "No fresh AI headlines today."
              except Exception as e:
                  return f"(Error fetching news: {e})"

          news_md = fetch_news()
          block = f"{START}\n\n**Last update:** {ts}\n\n{news_md}\n\n{END}"

          text = README_PATH.read_text(encoding="utf-8")
          pattern = re.compile(f"{START}[\\s\\S]*?{END}", re.M)
          updated = pattern.sub(block, text) if pattern.search(text) else text.rstrip() + "\n\n" + block
          README_PATH.write_text(updated, encoding="utf-8")
          PY

      - name: Commit and push
        env:
          GH_TOKEN: ${{ secrets.PAT_PUSH }}
        shell: bash
        run: |
          set -euxo pipefail

          git config user.name  "Aviv Geron"
          git config user.email "geron.aviv@hotmail.com"

          # show status for debugging
          git status --porcelain || true

          if ! git diff --quiet -- README.md; then
            git add README.md
            git commit -m "chore: daily AI news summary"
            git push "https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}.git" HEAD:${GITHUB_REF_NAME:-main}
          else
            echo "No changes to commit"
          fi
